{"version":3,"file":"iro-core.umd.js","sources":["../src/color.ts","../src/slider.ts","../src/wheel.ts","../src/box.ts","../src/util.ts","../src/colorPickerOptions.ts"],"sourcesContent":["// Some regular expressions for rgb() and hsl() Colors are borrowed from tinyColor\n// https://github.com/bgrins/TinyColor\n// Kelvin temperature math borrowed from Neil Barlett's implementation\n// from https://github.com/neilbartlett/color-temperature\n\n// https://www.w3.org/TR/css3-values/#integers\nconst CSS_INTEGER = '[-\\\\+]?\\\\d+%?';\n// http://www.w3.org/TR/css3-values/#number-value\nconst CSS_NUMBER = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?';\n// Allow positive/negative integer/number. Don't capture the either/or, just the entire outcome\nconst CSS_UNIT = '(?:' + CSS_NUMBER + ')|(?:' + CSS_INTEGER + ')';\n\n// Parse function params\n// Parens and commas are optional, and this also allows for whitespace between numbers\nconst PERMISSIVE_MATCH_3 = '[\\\\s|\\\\(]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')\\\\s*\\\\)?';\nconst PERMISSIVE_MATCH_4 = '[\\\\s|\\\\(]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')\\\\s*\\\\)?';\n\n// Regex patterns for functional color strings\nconst REGEX_FUNCTIONAL_RGB = new RegExp('rgb' + PERMISSIVE_MATCH_3);\nconst REGEX_FUNCTIONAL_RGBA = new RegExp('rgba' + PERMISSIVE_MATCH_4);\nconst REGEX_FUNCTIONAL_HSL = new RegExp('hsl' + PERMISSIVE_MATCH_3);\nconst REGEX_FUNCTIONAL_HSLA = new RegExp('hsla' + PERMISSIVE_MATCH_4);\n\n// Color string parsing regex\nconst HEX_START = '^(?:#?|0x?)';\nconst HEX_INT_SINGLE = '([0-9a-fA-F]{1})';\nconst HEX_INT_DOUBLE = '([0-9a-fA-F]{2})';\nconst REGEX_HEX_3 = new RegExp(HEX_START + HEX_INT_SINGLE + HEX_INT_SINGLE + HEX_INT_SINGLE + '$');\nconst REGEX_HEX_4 = new RegExp(HEX_START + HEX_INT_SINGLE + HEX_INT_SINGLE + HEX_INT_SINGLE + HEX_INT_SINGLE + '$');\nconst REGEX_HEX_6 = new RegExp(HEX_START + HEX_INT_DOUBLE + HEX_INT_DOUBLE + HEX_INT_DOUBLE + '$');\nconst REGEX_HEX_8 = new RegExp(HEX_START + HEX_INT_DOUBLE + HEX_INT_DOUBLE + HEX_INT_DOUBLE + HEX_INT_DOUBLE + '$');\n\n// Kelvin temperature bounds\nconst KELVIN_MIN = 1000;\nconst KELVIN_MAX = 40000;\n\n// Math shorthands\nconst { log, round, floor } = Math;\n\n/**\n * @desc Clamp a number between a min and max value\n * @param num - input value\n * @param min - min allowed value\n * @param max - max allowed value\n */\nfunction clamp(num: number, min: number, max: number): number {\n  return Math.min(Math.max(num, min), max)\n}\n\n/**\n * @desc Parse a css unit string - either regular int or a percentage number\n * @param str - css unit string\n * @param max - max unit value, used for calculating percentages\n */\nfunction parseUnit(str: string, max: number): number {\n  const isPercentage = str.indexOf('%') > -1;\n  const num = parseFloat(str);\n  return isPercentage ? (max / 100) * num : num;\n}\n\n/**\n * @desc Parse hex str to an int\n * @param str - hex string to parse\n */\nfunction parseHexInt(str: string): number {\n  return parseInt(str, 16);\n}\n\n/**\n * @desc Convert nunber into to 2-digit hex\n * @param int - number to convert\n */\nfunction intToHex(int: number): string {\n  return int.toString(16).padStart(2, '0');\n}\n\nexport interface ColorChanges {\n  h: boolean;\n  s: boolean;\n  v: boolean;\n  a: boolean;\n}\n\n// all hsv color channels are optional by design\nexport interface HsvColor {\n  h?: number;\n  s?: number;\n  v?: number;\n  a?: number;\n}\n\nexport interface RgbColor {\n  r: number;\n  g: number;\n  b: number;\n  a?: number;\n}\n\nexport interface HslColor {\n  h: number;\n  s: number;\n  l: number;\n  a?: number;\n}\n\nexport type IroColorValue = IroColor | HsvColor | RgbColor | HslColor | string;\n\nexport class IroColor {\n  // internal color value storage\n  private $: HsvColor;\n  private onChange: Function;\n  private initialValue: HsvColor;\n\n  public index: number;\n\n  /**\n    * @constructor Color object\n    * @param value - initial color value\n  */\n  constructor(value?: IroColorValue, onChange?: Function) {\n    // The default Color value\n    this.$ = {h: 0, s: 0, v: 0, a: 1};\n    if (value) this.set(value);\n    // The watch callback function for this Color will be stored here\n    this.onChange = onChange;\n    this.initialValue = { ...this.$ }; // copy initial value\n  }\n\n  /**\n    * @desc Set the Color from any valid value\n    * @param value - new color value\n  */\n  public set(value: IroColorValue) {\n    if (typeof value === 'string') {\n      if (/^(?:#?|0x?)[0-9a-fA-F]{3,8}$/.test(value as string)) {\n        this.hexString = value as string;\n      }\n      else if (/^rgba?/.test(value as string)) {\n        this.rgbString = value as string;\n      }\n      else if (/^hsla?/.test(value as string)) {\n        this.hslString = value as string;\n      }\n    }\n    else if (typeof value === 'object') {\n      if (value instanceof IroColor) {\n        this.hsv = value.hsv;\n      }\n      else if (typeof value === 'object' && ('r' in value) && ('g' in value) && ('b' in value)) {\n        this.rgb = value;\n      }\n      else if (typeof value === 'object' && ('h' in value) && ('s' in value) && ('v' in value)) {\n        this.hsv = value;\n      }\n      else if (typeof value === 'object' && ('h' in value) && ('s' in value) && ('l' in value)) {\n        this.hsl = value;\n      }\n    }\n    else {\n      throw new Error('Invalid color value');\n    }\n  }\n\n  /**\n    * @desc Shortcut to set a specific channel value\n    * @param format - hsv | hsl | rgb\n    * @param channel - individual channel to set, for example if model = hsl, chanel = h | s | l\n    * @param value - new value for the channel\n  */\n  public setChannel(format: string, channel: string, value: number) {\n    this[format] = {...this[format], [channel]: value};\n  }\n\n  /**\n   * @desc Reset color back to its initial value\n   */\n  public reset() {\n    this.hsva = this.initialValue;\n  }\n\n  /**\n    * @desc make new Color instance with the same value as this one\n  */\n  public clone() {\n    return new IroColor(this);\n  }\n\n  /**\n   * @desc remove color onChange\n   */\n  public unbind() {\n    this.onChange = undefined;\n  }\n\n  /**\n    * @desc Convert hsv object to rgb\n    * @param hsv - hsv color object\n  */\n  public static hsvToRgb(hsv: HsvColor): RgbColor {\n    const h = hsv.h / 60;\n    const s = hsv.s / 100;\n    const v = hsv.v / 100;\n    const i = floor(h);\n    const f = h - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n    const mod = i % 6;\n    const r = [v, q, p, p, t, v][mod];\n    const g = [t, v, v, q, p, p][mod];\n    const b = [p, p, t, v, v, q][mod];\n    return {\n      r: clamp(r * 255, 0, 255), \n      g: clamp(g * 255, 0, 255), \n      b: clamp(b * 255, 0, 255)\n    };\n  }\n\n  /**\n    * @desc Convert rgb object to hsv\n    * @param rgb - rgb object\n  */\n  public static rgbToHsv(rgb: RgbColor): HsvColor {\n    const r = rgb.r / 255;\n    const g = rgb.g / 255;\n    const b = rgb.b / 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const delta = max - min;\n    let hue = 0;\n    let value = max;\n    let saturation = max === 0 ? 0 : delta / max;\n    switch (max) {\n      case min: \n        hue = 0; // achromatic\n        break;\n      case r: \n        hue = (g - b) / delta + (g < b ? 6 : 0);\n        break;\n      case g: \n        hue = (b - r) / delta + 2;\n        break;\n      case b:\n        hue = (r - g) / delta + 4;\n        break;\n    }\n    return {\n      h: (hue * 60) % 360,\n      s: clamp(saturation * 100, 0, 100),\n      v: clamp(value * 100, 0, 100)\n    }\n  }\n\n  /**\n    * @desc Convert hsv object to hsl\n    * @param hsv - hsv object\n  */\n  public static hsvToHsl(hsv: HsvColor): HslColor {\n    const s = hsv.s / 100;\n    const v = hsv.v / 100;\n    const l = (2 - s) * v;\n    const divisor = l <= 1 ? l : (2 - l);\n    // Avoid division by zero when lightness is close to zero\n    const saturation = divisor < 1e-9 ? 0 : (s * v) / divisor;\n    return {\n      h: hsv.h,\n      s: clamp(saturation * 100, 0, 100),\n      l: clamp(l * 50, 0, 100)\n    };\n  }\n\n  /**\n    * @desc Convert hsl object to hsv\n    * @param hsl - hsl object\n  */\n  public static hslToHsv(hsl: HslColor): HsvColor {\n    const l = hsl.l * 2;\n    const s = (hsl.s * ((l <= 100) ? l : 200 - l)) / 100;\n    // Avoid division by zero when l + s is near 0\n    const saturation = (l + s < 1e-9) ? 0 : (2 * s) / (l + s);\n    return {\n      h: hsl.h,\n      s: clamp(saturation * 100, 0, 100),\n      v: clamp((l + s) / 2, 0, 100)\n    };\n  }\n\n  /**\n    * @desc Convert a kelvin temperature to an approx, RGB value\n    * @param kelvin - kelvin temperature\n  */\n  public static kelvinToRgb(kelvin: number): RgbColor {\n    const temp = kelvin / 100;\n    let r, g, b;\n    if (temp < 66) {\n      r = 255\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log(g)\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log(b)\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log(r)\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log(g)\n      b = 255\n    }\n    return {\n      r: clamp(floor(r), 0, 255),\n      g: clamp(floor(g), 0, 255),\n      b: clamp(floor(b), 0, 255)\n    };\n  }\n\n   /**\n    * @desc Convert an RGB color to an approximate kelvin temperature\n    * @param kelvin - kelvin temperature\n  */\n  public static rgbToKelvin(rgb: RgbColor): number {\n    const { r, g, b } = rgb;\n    const eps = 0.4;\n    let minTemp = KELVIN_MIN;\n    let maxTemp = KELVIN_MAX;\n    let temp;\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      const rgb = IroColor.kelvinToRgb(temp);\n      if ((rgb.b / rgb.r) >= (b / r)) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n    return temp;\n  }\n\n  public get hsv(): HsvColor {\n    // value is cloned to allow changes to be made to the values before passing them back\n    const value = this.$;\n    return {h: value.h, s: value.s, v: value.v};\n  }\n\n  public set hsv(newValue: HsvColor) {\n    const oldValue = this.$;\n\n    newValue = { ...oldValue, ...newValue };\n    // If this Color is being watched for changes we need to compare the new and old values to check the difference\n    // Otherwise we can just be lazy\n    if (this.onChange) {\n      // Compute changed values\n      let changes: ColorChanges = {\n        h: false,\n        v: false,\n        s: false,\n        a: false,\n      };\n\n      for (let key in oldValue) {\n        changes[key] = newValue[key] != oldValue[key]\n      };\n      // Update the old value\n      this.$ = newValue;\n      // If the value has changed, call hook callback\n      if (changes.h || changes.s || changes.v || changes.a) this.onChange(this, changes);\n    } else {\n      this.$ = newValue;\n    }\n  }\n\n  public get hsva(): HsvColor {\n    return {...this.$};\n  }\n\n  public set hsva(value: HsvColor) {\n    this.hsv = value;\n  }\n\n  public get hue(): number {\n    return this.$.h;\n  }\n\n  public set hue(value: number) {\n    this.hsv = { h: value };\n  }\n\n  public get saturation(): number {\n    return this.$.s;\n  }\n\n  public set saturation(value: number) {\n    this.hsv = { s: value };\n  }\n\n  public get value(): number {\n    return this.$.v;\n  }\n\n  public set value(value: number) {\n    this.hsv = { v: value };\n  }\n\n  public get alpha(): number {\n    return this.$.a;\n  }\n\n  public set alpha(value: number) {\n    this.hsv = { ...this.hsv, a: value };\n  }\n\n  public get kelvin(): number {\n    return IroColor.rgbToKelvin(this.rgb);\n  }\n\n  public set kelvin(value: number) {\n    this.rgb = IroColor.kelvinToRgb(value);\n  }\n\n  public get red(): number {\n    const rgb = this.rgb;\n    return rgb.r;\n  }\n\n  public set red(value: number) {\n    this.rgb = { ...this.rgb, r: value };\n  }\n\n  public get green(): number {\n    const rgb = this.rgb;\n    return rgb.g;\n  }\n\n  public set green(value: number) {\n    this.rgb = { ...this.rgb, g: value };\n  }\n\n  public get blue(): number {\n    const rgb = this.rgb;\n    return rgb.b;\n  }\n\n  public set blue(value: number) {\n    this.rgb = { ...this.rgb, b: value };\n  }\n\n  public get rgb(): RgbColor {\n    const {r, g, b} = IroColor.hsvToRgb(this.$);\n    return {\n      r: round(r),\n      g: round(g),\n      b: round(b),\n    };\n  }\n\n  public set rgb(value: RgbColor) {\n    this.hsv = {\n      ...IroColor.rgbToHsv(value), \n      a: (value.a === undefined) ? 1 : value.a\n    };\n  }\n\n  public get rgba(): RgbColor {\n    return { ...this.rgb, a: this.alpha };\n  }\n\n  public set rgba(value: RgbColor) {\n    this.rgb = value;\n  }\n\n  public get hsl(): HslColor {\n    const {h, s, l} = IroColor.hsvToHsl(this.$);\n    return {\n      h: round(h),\n      s: round(s),\n      l: round(l),\n    };\n  }\n\n  public set hsl(value: HslColor) {\n    this.hsv = {\n      ...IroColor.hslToHsv(value), \n      a: (value.a === undefined) ? 1 : value.a\n    };\n  }\n\n  public get hsla(): HslColor {\n    return { ...this.hsl, a: this.alpha };\n  }\n\n  public set hsla(value: HslColor) {\n    this.hsl = value;\n  }\n\n  public get rgbString(): string {\n    const rgb = this.rgb;\n    return `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`;\n  }\n\n  public set rgbString(value: string) {\n    let match;\n    let r, g, b, a = 1;\n    if (match = REGEX_FUNCTIONAL_RGB.exec(value)) {\n      r = parseUnit(match[1], 255);\n      g = parseUnit(match[2], 255);\n      b = parseUnit(match[3], 255);\n    }\n    else if (match = REGEX_FUNCTIONAL_RGBA.exec(value)) {\n      r = parseUnit(match[1], 255);\n      g = parseUnit(match[2], 255);\n      b = parseUnit(match[3], 255);\n      a = parseUnit(match[4], 1);\n    }\n    if (match) {\n      this.rgb = {r, g, b, a};\n    } \n    else {\n      throw new Error('Invalid rgb string');\n    }\n  }\n\n  public get rgbaString(): string {\n    const rgba = this.rgba;\n    return `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`;\n  }\n\n  public set rgbaString(value: string) {\n    this.rgbString = value;\n  }\n\n  public get hexString(): string {\n    const rgb = this.rgb;\n    return `#${ intToHex(rgb.r) }${ intToHex(rgb.g) }${ intToHex(rgb.b) }`;\n  }\n\n  public set hexString(value: string) {\n    let match;\n    let r, g, b, a = 255;\n    if (match = REGEX_HEX_3.exec(value)) {\n      r = parseHexInt(match[1]) * 17;\n      g = parseHexInt(match[2]) * 17;\n      b = parseHexInt(match[3]) * 17;\n    }\n    else if (match = REGEX_HEX_4.exec(value)) {\n      r = parseHexInt(match[1]) * 17;\n      g = parseHexInt(match[2]) * 17;\n      b = parseHexInt(match[3]) * 17;\n      a = parseHexInt(match[4]) * 17;\n    }\n    else if (match = REGEX_HEX_6.exec(value)) {\n      r = parseHexInt(match[1]);\n      g = parseHexInt(match[2]);\n      b = parseHexInt(match[3]);\n    }\n    else if (match = REGEX_HEX_8.exec(value)) {\n      r = parseHexInt(match[1]);\n      g = parseHexInt(match[2]);\n      b = parseHexInt(match[3]);\n      a = parseHexInt(match[4]);\n    }\n    if (match) {\n      this.rgb = {r, g, b, a: a / 255};\n    }\n    else {\n      throw new Error('Invalid hex string');\n    }\n  }\n\n  public get hex8String(): string {\n    const rgba = this.rgba;\n    return `#${intToHex(rgba.r)}${intToHex(rgba.g)}${intToHex(rgba.b)}${intToHex(floor(rgba.a * 255))}`;\n  }\n\n  public set hex8String(value: string) {\n    this.hexString = value;\n  }\n\n  public get hslString(): string {\n    const hsl = this.hsl;\n    return `hsl(${hsl.h}, ${hsl.s}%, ${hsl.l}%)`;\n  }\n\n  public set hslString(value: string) {\n    let match;\n    let h, s, l, a = 1;\n    if (match = REGEX_FUNCTIONAL_HSL.exec(value)) {\n      h = parseUnit(match[1], 360);\n      s = parseUnit(match[2], 100);\n      l = parseUnit(match[3], 100);\n    }\n    else if (match = REGEX_FUNCTIONAL_HSLA.exec(value)) {\n      h = parseUnit(match[1], 360);\n      s = parseUnit(match[2], 100);\n      l = parseUnit(match[3], 100);\n      a = parseUnit(match[4], 1);\n    }\n    if (match) {\n      this.hsl = {h, s, l, a};\n    } \n    else {\n      throw new Error('Invalid hsl string');\n    }\n  }\n\n  public get hslaString(): string {\n    const hsla = this.hsla;\n    return `hsl(${hsla.h}, ${hsla.s}%, ${hsla.l}%, ${hsla.a})`;\n  }\n\n  public set hslaString(value: string) {\n    this.hslString = value;\n  }\n}","import { IroColor } from './color';\nimport { IroColorPickerOptions } from './colorPickerOptions';\n\nexport type SliderShape = 'bar' | 'circle' | '';\nexport type SliderType = 'red' | 'green' | 'blue' |'alpha' | 'hue' | 'saturation' | 'value' | 'kelvin' | '';\n\nexport interface SliderOptions extends IroColorPickerOptions {\n  color: IroColor;\n  sliderShape: SliderShape;\n  sliderType: SliderType;\n  minTemperature: number;\n  maxTemperature: number;\n}\n\nexport const sliderDefaultOptions = {\n  sliderShape: 'bar',\n  sliderType: 'value',\n  minTemperature: 2200,\n  maxTemperature: 11000\n}\n\n/**\n * @desc Get the CSS styles for the slider root\n * @param props - slider props\n */\nexport function getSliderStyles(props: Partial<SliderOptions>) {\n  return {\n    [props.layoutDirection === 'horizontal' ? 'marginLeft' : 'marginTop']: props.sliderMargin\n  }\n}\n\n/**\n * @desc Get the bounding dimensions of the slider\n * @param props - slider props\n */\nexport function getSliderDimensions(props: Partial<SliderOptions>) {\n  let { width, sliderSize: sliderSize, borderWidth, handleRadius, padding, sliderShape } = props;\n  const ishorizontal = props.layoutDirection === 'horizontal';\n  // automatically calculate sliderSize if its not defined\n  sliderSize = sliderSize ? sliderSize : padding * 2 + handleRadius * 2 + borderWidth * 2;\n  if (sliderShape === 'circle') {\n    return {\n      handleStart: props.padding + props.handleRadius,\n      handleRange: width - padding * 2 - handleRadius * 2 - borderWidth * 2,\n      width: width,\n      height: width,\n      cx: width / 2,\n      cy: width / 2,\n      radius: width / 2 - borderWidth / 2\n    }\n  } else {\n    return {\n      handleStart: sliderSize / 2,\n      handleRange: width - sliderSize,\n      radius: sliderSize / 2,\n      x: 0,\n      y: 0,\n      width: ishorizontal ? sliderSize : width,\n      height: ishorizontal ? width : sliderSize,\n    }\n  }\n}\n\n/**\n * @desc Get the current slider value for a given color, as a percentage\n * @param props - slider props\n * @param color\n */\nexport function getCurrentSliderValue(props: Partial<SliderOptions>, color: IroColor) {\n  const hsva = color.hsva;\n  const rgb = color.rgb;\n\n  switch (props.sliderType) {\n    case 'red':\n      return rgb.r / 2.55;\n    case 'green':\n      return rgb.g / 2.55;\n    case 'blue':\n      return rgb.b / 2.55;\n    case 'alpha':\n      return hsva.a * 100;\n    case 'kelvin':\n      const { minTemperature, maxTemperature } = props;\n      const temperatureRange = maxTemperature - minTemperature;\n      const percent = ((color.kelvin - minTemperature) / temperatureRange) * 100;\n      // clmap percentage\n      return Math.max(0, Math.min(percent, 100));\n    case 'hue':\n      return hsva.h /= 3.6;\n    case 'saturation':\n      return hsva.s;\n    case 'value':\n    default:\n      return hsva.v;\n  }\n}\n\n/**\n * @desc Get the current slider value from user input\n * @param props - slider props\n * @param x - global input x position\n * @param y - global input y position\n */\nexport function getSliderValueFromInput(props: Partial<SliderOptions>, x: number, y: number) {\n  const { handleRange, handleStart } = getSliderDimensions(props);\n  let handlePos;\n  if (props.layoutDirection === 'horizontal') {\n    handlePos = -1 * y + handleRange + handleStart;\n  } else {\n    handlePos = x - handleStart;\n  }\n  // clamp handle position\n  handlePos = Math.max(Math.min(handlePos, handleRange), 0);\n  const percent = Math.round((100 / handleRange) * handlePos);\n  switch (props.sliderType) {\n    case 'kelvin':\n      const { minTemperature, maxTemperature } = props;\n      const temperatureRange = maxTemperature - minTemperature;\n      return minTemperature + temperatureRange * (percent / 100);\n    case 'alpha':\n      return percent / 100;\n    case 'hue':\n      return percent * 3.6;\n    case 'red':\n    case 'blue':\n    case 'green':\n      return percent * 2.55;\n    default:\n      return percent;\n  }\n}\n\n/**\n * @desc Get the current handle position for a given color\n * @param props - slider props\n * @param color\n */\nexport function getSliderHandlePosition(props: Partial<SliderOptions>, color: IroColor) {\n  const { width, height, handleRange, handleStart } = getSliderDimensions(props);\n  const ishorizontal = props.layoutDirection === 'horizontal';\n  const sliderValue = getCurrentSliderValue(props, color);\n  const midPoint = ishorizontal ? width / 2 : height / 2;\n  let handlePos = handleStart + (sliderValue / 100) * handleRange;\n  if (ishorizontal) {\n    handlePos = -1 * handlePos + handleRange + handleStart * 2;\n  } \n  return {x: ishorizontal ? midPoint : handlePos, y: ishorizontal ? handlePos : midPoint};\n}\n\n/**\n * @desc Get the gradient stops for a slider\n * @param props - slider props\n * @param color\n */\nexport function getSliderGradient(props: Partial<SliderOptions>, color: IroColor) {\n  const hsv = color.hsv;\n  const rgb = color.rgb;\n\n  switch (props.sliderType) {\n    case 'red':\n      return [\n        [0, `rgb(${ 0 },${ rgb.g },${ rgb.b })`],\n        [100, `rgb(${ 255 },${ rgb.g },${ rgb.b })`],\n      ];\n    case 'green':\n      return [\n        [0, `rgb(${ rgb.r },${ 0 },${ rgb.b })`],\n        [100, `rgb(${ rgb.r },${ 255 },${ rgb.b })`],\n      ];\n    case 'blue':\n      return [\n        [0, `rgb(${ rgb.r },${ rgb.g },${ 0 })`],\n        [100, `rgb(${ rgb.r },${ rgb.g },${ 255 })`],\n      ];\n    case 'alpha':\n      return [\n        [0, `rgba(${ rgb.r },${ rgb.g },${ rgb.b },0)`],\n        [100, `rgb(${ rgb.r },${ rgb.g },${ rgb.b })`],\n      ];\n    case 'kelvin':\n      const stops = [];\n      const min = props.minTemperature;\n      const max = props.maxTemperature;\n      const numStops = 8;\n      const range = max - min;\n      for (let kelvin = min, stop = 0; kelvin < max; kelvin += range / numStops, stop += 1) {\n        const { r, g, b } = IroColor.kelvinToRgb(kelvin);\n        stops.push([ 100 / numStops * stop, `rgb(${r},${g},${b})` ]);\n      }\n      return stops;\n    case 'hue':\n      return [\n        [0,      '#f00'],\n        [16.666, '#ff0'],\n        [33.333, '#0f0'],\n        [50,     '#0ff'],\n        [66.666, '#00f'],\n        [83.333, '#f0f'],\n        [100,    '#f00'],\n      ];\n    case 'saturation':\n      const noSat = IroColor.hsvToHsl({h: hsv.h, s: 0, v: hsv.v});\n      const fullSat = IroColor.hsvToHsl({h: hsv.h, s: 100, v: hsv.v});\n      return [\n        [0, `hsl(${noSat.h},${noSat.s}%,${noSat.l}%)`],\n        [100, `hsl(${fullSat.h},${fullSat.s}%,${fullSat.l}%)`]\n      ];\n    case 'value':\n    default:\n      const hsl = IroColor.hsvToHsl({h: hsv.h, s: hsv.s, v: 100});\n      return [\n        [0, '#000'],\n        [100, `hsl(${hsl.h},${hsl.s}%,${hsl.l}%)`]\n      ];\n  }\n}\n\n/**\n * @desc Get the gradient coords for a slider\n * @param props - slider props\n */\nexport function getSliderGradientCoords(props: Partial<SliderOptions>) {\n  const ishorizontal = props.layoutDirection === 'horizontal';\n  return {\n    x1: '0%',\n    y1: ishorizontal ? '100%' : '0%',\n    x2: ishorizontal ? '0%' : '100%',\n    y2: '0%'\n  }\n}","import { IroColorPickerOptions } from './colorPickerOptions';\nimport { IroColor, IroColorValue } from './color';\n\nexport interface WheelProps extends IroColorPickerOptions {\n  color: IroColor;\n}\n\n/**\n * @desc Get the point as the center of the wheel\n * @param props - wheel props\n */\nexport function getWheelDimensions(props: Partial<WheelProps>) {\n  const rad = props.width / 2;\n  return {\n    width: props.width,\n    radius: rad - props.borderWidth,\n    cx: rad,\n    cy: rad\n  };\n}\n\n/**\n * @desc Translate an angle according to wheelAngle and wheelDirection\n * @param props - wheel props\n * @param angle - input angle\n */\nexport function translateWheelAngle(props: Partial<WheelProps>, angle: number, invert?: boolean) {\n  const wheelAngle = props.wheelAngle;\n  const wheelDirection = props.wheelDirection\n  if ((!invert && wheelDirection === 'clockwise') || (invert && wheelDirection === 'anticlockwise')) {\n    angle = (invert ? 180 : 360) - (wheelAngle - angle);\n  } \n  else {\n    angle = wheelAngle + angle;\n  }\n  // javascript's modulo operator doesn't produce positive numbers with negative input\n  // https://dev.to/maurobringolf/a-neat-trick-to-compute-modulo-of-negative-numbers-111e\n  return (angle % 360 + 360) % 360;\n}\n\n/**\n * @desc Get the current handle position for a given color\n * @param props - wheel props\n * @param color\n */\nexport function getWheelHandlePosition(props: Partial<WheelProps>, color: IroColor) {\n  const hsv = color.hsv;\n  const { cx, cy } = getWheelDimensions(props);\n  const handleRange = props.width / 2 - props.padding - props.handleRadius - props.borderWidth;\n  const handleAngle = (180 + translateWheelAngle(props, hsv.h, true)) * (Math.PI / 180);\n  const handleDist = (hsv.s / 100) * handleRange;\n  const direction = props.wheelDirection === 'clockwise' ? -1 : 1;\n  return {\n    x: cx + handleDist * Math.cos(handleAngle) * direction,\n    y: cy + handleDist * Math.sin(handleAngle) * direction,\n  }\n}\n\n/**\n * @desc Get the current wheel value from user input\n * @param props - wheel props\n * @param x - global input x position\n * @param y - global input y position\n */\nexport function getWheelValueFromInput(props: Partial<WheelProps>, x: number, y: number) {\n  const { cx, cy } = getWheelDimensions(props);\n  const handleRange = props.width / 2 - props.padding - props.handleRadius - props.borderWidth;\n  x = cx - x;\n  y = cy - y;\n  // Calculate the hue by converting the angle to radians\n  const hue = translateWheelAngle(props, Math.atan2(-y, -x) * (180 / Math.PI));\n  // Find the point's distance from the center of the wheel\n  // This is used to show the saturation level\n  const handleDist = Math.min(Math.sqrt(x * x + y * y), handleRange);\n  return {\n    h: Math.round(hue),\n    s: Math.round((100 / handleRange) * handleDist)\n  };\n}","import { IroColor } from './color';\nimport { IroColorPickerOptions } from './colorPickerOptions';\n\nexport interface BoxOptions extends IroColorPickerOptions {\n  color: IroColor;\n}\n\n/**\n * @desc Get the CSS styles for the box root element\n * @param props - box props\n */\nexport function getBoxStyles(props: Partial<BoxOptions>) {\n  return {\n    [props.layoutDirection === 'horizontal' ? 'marginLeft' : 'marginTop']: props.sliderMargin\n  }\n}\n\n/**\n * @desc Get the bounding dimensions of the box\n * @param props - box props\n */\nexport function getBoxDimensions(props: Partial<BoxOptions>) {\n  const { width, padding, handleRadius } = props;\n  return {\n    width: width,\n    height: width,\n    radius: padding + handleRadius\n  };\n}\n\n/**\n * @desc Get the current box value from user input\n * @param props - box props\n * @param x - global input x position\n * @param y - global input y position\n */\nexport function getBoxValueFromInput(props: Partial<BoxOptions>, x: number, y: number) {\n  const { width, height, radius } = getBoxDimensions(props);\n  const handleStart = radius;\n  const handleRangeX = width - radius * 2;\n  const handleRangeY = height - radius * 2;\n  const percentX = ((x - handleStart) / handleRangeX) * 100;\n  const percentY = ((y - handleStart) / handleRangeY) * 100;\n  return {\n    s: Math.max(0, Math.min(percentX, 100)),\n    v: Math.max(0, Math.min(100 - percentY, 100))\n  }\n}\n\n/**\n * @desc Get the current box handle position for a given color\n * @param props - box props\n * @param color\n */\nexport function getBoxHandlePosition(props: Partial<BoxOptions>, color: IroColor) {\n  const { width, height, radius } = getBoxDimensions(props);\n  const hsv = color.hsv;\n  const handleStart = radius;\n  const handleRangeX = width - radius * 2;\n  const handleRangeY = height - radius * 2;\n  return { \n    x: handleStart + (hsv.s / 100) * handleRangeX,\n    y: handleStart + (handleRangeY - ((hsv.v / 100) * handleRangeY))\n  }\n}\n\n/**\n * @desc Get the gradient stops for a box\n * @param props - box props\n * @param color\n */\nexport function getBoxGradients(props: Partial<BoxOptions>, color: IroColor) {\n  const hue = color.hue;\n  return [\n    // saturation gradient\n    [\n      [0, '#fff'],\n      [100, `hsl(${hue},100%,50%)`],\n    ],\n    // lightness gradient\n    [\n      [0, 'rgba(0,0,0,0)'],\n      [100, '#000'],\n    ]\n  ];\n}","import { IroColorPickerOptions } from './colorPickerOptions';\n\n// Keep track of html <base> elements for resolveSvgUrl\n// getElementsByTagName returns a live HTMLCollection, which stays in sync with the DOM tree\n// So it only needs to be called once\nlet BASE_ELEMENTS:  HTMLCollectionOf<HTMLBaseElement> | undefined;\n\n/**\n * @desc Resolve an SVG reference URL\n * This is required to work around how Safari and iOS webviews handle gradient URLS under certain conditions\n * If a page is using a client-side routing library which makes use of the HTML <base> tag, \n * Safari won't be able to render SVG gradients properly (as they are referenced by URLs)\n * More info on the problem: \n * https://stackoverflow.com/questions/19742805/angular-and-svg-filters/19753427#19753427\n * https://github.com/jaames/iro.js/issues/18\n * https://github.com/jaames/iro.js/issues/45\n * https://github.com/jaames/iro.js/pull/89\n * @props url - SVG reference URL\n */\nexport function resolveSvgUrl(url: string) {\n  if (!BASE_ELEMENTS)\n    BASE_ELEMENTS = document.getElementsByTagName('base');\n  // Sniff useragent string to check if the user is running Safari\n  const ua = window.navigator.userAgent;\n  const isSafari = /^((?!chrome|android).)*safari/i.test(ua);\n  const isIos = /iPhone|iPod|iPad/i.test(ua);\n  const location = window.location;\n  return ((isSafari || isIos) && (BASE_ELEMENTS.length > 0)) ? `${location.protocol}//${location.host}${location.pathname}${location.search}${url}` : url;\n}\n\n/**\n * @desc Get the path commands to draw an svg arc\n * @props cx - arc center point x\n * @props cy - arc center point y\n * @props radius - arc radius\n * @props startAngle - arc start angle\n * @props endAngle - arc end angle\n */\nexport function getSvgArcPath(cx: number, cy: number, radius: number, startAngle: number, endAngle: number) {\n  const largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1;\n  startAngle *= Math.PI / 180;\n  endAngle *= Math.PI / 180;\n  const x1 = cx + radius * Math.cos(endAngle);\n  const y1 = cy + radius * Math.sin(endAngle);\n  const x2 = cx + radius * Math.cos(startAngle);\n  const y2 = cy + radius * Math.sin(startAngle);\n  return `M ${x1} ${y1} A ${radius} ${radius} 0 ${largeArcFlag} 0 ${x2} ${y2}`;\n}\n\n/**\n * @desc Given a specifc (x, y) position, test if there's a handle there and return its index, else return null.\n *       This is used for components like the box and wheel which support multiple handles when multicolor is active\n * @props x - point x position\n * @props y - point y position\n * @props handlePositions - array of {x, y} coords for each handle\n */\nexport function getHandleAtPoint(props: Partial<IroColorPickerOptions>, x: number, y: number, handlePositions: {x: number, y: number}[]) {\n  for (let i = 0; i < handlePositions.length; i++) {\n    const dX = handlePositions[i].x - x;\n    const dY = handlePositions[i].y - y;\n    const dist = Math.sqrt(dX * dX + dY * dY);\n    if (dist < props.handleRadius) {\n      return i;\n    }\n  }\n  return null;\n}","import { IroColor, IroColorValue } from './color';\n\nexport type LayoutDirection = 'vertical' | 'horizontal' | '';\n\nexport type WheelDirection = 'clockwise' | 'anticlockwise' | '';\n\nexport interface IroColorPickerOptions {\n  width?: number;\n  height?: number;\n  handleRadius?: number;\n  handleSvg?: string;\n  handleProps?: any;\n  color?: IroColorValue;\n  colors?: IroColorValue[];\n  borderColor?: string;\n  borderWidth?: number;\n  wheelLightness?: boolean;\n  wheelAngle?: number;\n  wheelDirection?: WheelDirection;\n  layoutDirection?: LayoutDirection;\n  sliderSize?: number;\n  sliderMargin?: number;\n  padding?: number;\n}\n\nexport const iroColorPickerOptionDefaults: IroColorPickerOptions = {\n  width: 300,\n  height: 300,\n  handleRadius: 8,\n  handleSvg: null,\n  handleProps: {x: 0, y: 0},\n  color: '#fff',\n  colors: [],\n  borderColor: '#fff',\n  borderWidth: 0,\n  wheelLightness: true,\n  wheelAngle: 0,\n  wheelDirection: 'anticlockwise',\n  layoutDirection: 'vertical',\n  sliderSize: null,\n  sliderMargin: 12,\n  padding: 6,\n}"],"names":["const","CSS_INTEGER","CSS_NUMBER","CSS_UNIT","PERMISSIVE_MATCH_3","PERMISSIVE_MATCH_4","REGEX_FUNCTIONAL_RGB","RegExp","REGEX_FUNCTIONAL_RGBA","REGEX_FUNCTIONAL_HSL","REGEX_FUNCTIONAL_HSLA","HEX_START","HEX_INT_SINGLE","HEX_INT_DOUBLE","REGEX_HEX_3","REGEX_HEX_4","REGEX_HEX_6","REGEX_HEX_8","KELVIN_MIN","KELVIN_MAX","round","floor","clamp","num","min","max","Math","parseUnit","str","isPercentage","indexOf","parseFloat","parseHexInt","parseInt","intToHex","int","toString","padStart","IroColor","constructor","value","onChange","$","set","initialValue","test","hexString","rgbString","hslString","hsv","rgb","hsl","Error","setChannel","format","channel","reset","hsva","clone","unbind","undefined","hsvToRgb","h","s","v","i","f","p","q","t","mod","r","g","b","rgbToHsv","delta","hue","saturation","hsvToHsl","l","divisor","hslToHsv","kelvinToRgb","kelvin","temp","log","rgbToKelvin","eps","minTemp","maxTemp","newValue","oldValue","changes","let","key","a","alpha","red","green","blue","rgba","hsla","match","exec","rgbaString","hex8String","hslaString","sliderDefaultOptions","sliderShape","sliderType","minTemperature","maxTemperature","getSliderStyles","props","layoutDirection","sliderMargin","getSliderDimensions","sliderSize","borderWidth","handleRadius","padding","ishorizontal","handleStart","handleRange","width","height","cx","cy","radius","x","y","getCurrentSliderValue","color","temperatureRange","percent","getSliderValueFromInput","handlePos","getSliderHandlePosition","sliderValue","midPoint","getSliderGradient","stops","numStops","range","stop","push","noSat","fullSat","getSliderGradientCoords","x1","y1","x2","y2","getWheelDimensions","rad","translateWheelAngle","angle","invert","wheelAngle","wheelDirection","getWheelHandlePosition","handleAngle","PI","handleDist","direction","cos","sin","getWheelValueFromInput","atan2","sqrt","getBoxStyles","getBoxDimensions","getBoxValueFromInput","handleRangeX","handleRangeY","percentX","percentY","getBoxHandlePosition","getBoxGradients","BASE_ELEMENTS","resolveSvgUrl","url","document","getElementsByTagName","ua","window","navigator","userAgent","isSafari","isIos","location","length","protocol","host","pathname","search","getSvgArcPath","startAngle","endAngle","largeArcFlag","getHandleAtPoint","handlePositions","dX","dY","dist","iroColorPickerOptionDefaults","handleSvg","handleProps","colors","borderColor","wheelLightness"],"mappings":"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"}